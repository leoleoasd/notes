local ran_ok, error = pcall(function() local kpse = require("kpse") kpse.set_program_name("luatex") local lfs = require("lfs") local cacheDir = "./_markdown_course-design-docs" if not lfs.isdir(cacheDir) then assert(lfs.mkdir(cacheDir)) end local md = require("markdown") local convert = md.new({cacheDir = "./_markdown_course-design-docs", frozenCacheFileName = "./_markdown_course-design-docs/frozenCache.tex", frozenCacheCounter = 0, fencedCode = true, hybrid = true, pipeTables = true, } ) local file = assert(io.open("./course-design-docs.markdown.in", "r")) local input = assert(file:read("*a")) assert(file:close()) print(convert(input:gsub("\r\n?", "\n") .. "\n")) end) if not ran_ok then local file = io.open("./course-design-docs.markdown.err", "w") if file then file:write(error .. "\n") file:close() end print('\\markdownError{An error was encountered while executing Lua code}{For further clues, examine the file "./course-design-docs.markdown.err"}') end
